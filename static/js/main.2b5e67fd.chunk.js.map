{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ALPHABETICALLY","SORT_LENGTH","App","useState","sortField","setSortField","reverseField","setReverseField","visibleGoods","goods","preparedGoods","sort","good1","good2","length","localeCompare","reverse","getPreparedGoods","className","type","onClick","cn","current","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAA4B,iBAC5BC,EAAc,SA2Bb,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,oBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACMC,EA5BR,SAA0BC,EAAOL,EAAWE,GAC1C,IAAMI,EAAa,YAAOD,GAqB1B,OAnBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKH,EACH,OAAOW,EAAME,OAASD,EAAMC,OAE9B,KAAKd,EACH,OAAOY,EAAMG,cAAcF,GAE7B,QACE,OAAO,MAKXP,GACFI,EAAcM,UAGTN,EAMcO,CACnBlB,EAAiBK,EAAWE,GAQ9B,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAMf,EAAaL,IAC5BkB,UAAWG,IAAG,SAAU,UACtB,CAAE,WAAYjB,IAAcJ,IAJhC,iCAUA,wBACEmB,KAAK,SACLC,QAAS,kBAAMf,EAAaJ,IAC5BiB,UAAWG,IAAG,SAAU,aACtB,CAAE,WAAYjB,IAAcH,IAJhC,4BAUA,wBACEkB,KAAK,SACLC,QAAS,kBAAMb,GAAgB,SAAAe,GAAO,OAAKA,MAC3CJ,UAAWG,IAAG,SAAU,aACtB,CAAE,YAA6B,IAAjBf,IAJlB,sBAUEF,GAAaE,IACb,wBACEa,KAAK,SACLC,QAzCI,WACZf,EAAa,IACbE,GAAgB,IAwCRW,UAAU,4BAHZ,sBAUJ,6BACGV,EAAae,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCxGjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2b5e67fd.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHABETICALLY = 'alphabetically';\nconst SORT_LENGTH = 'length';\n\nfunction getPreparedGoods(goods, sortField, reverseField) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_LENGTH:\n          return good1.length - good2.length;\n\n        case SORT_FIELD_ALPHABETICALLY:\n          return good1.localeCompare(good2);\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverseField) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reverseField, setReverseField] = useState(false);\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer, sortField, reverseField,\n  );\n\n  const reset = () => {\n    setSortField('');\n    setReverseField(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => setSortField(SORT_FIELD_ALPHABETICALLY)}\n          className={cn('button', 'is-info',\n            { 'is-light': sortField !== SORT_FIELD_ALPHABETICALLY })\n          }\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setSortField(SORT_LENGTH)}\n          className={cn('button', 'is-success',\n            { 'is-light': sortField !== SORT_LENGTH })\n          }\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setReverseField(current => !current)}\n          className={cn('button', 'is-warning',\n            { 'is-light': reverseField === false })\n          }\n        >\n          Reverse\n        </button>\n\n        {(sortField || reverseField) && (\n          <button\n            type=\"button\"\n            onClick={reset}\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}